<?xml version="1.0" encoding="utf-8"?>


<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN">
    <title type="text">bean&#39;s blog</title>
    <subtitle type="html">bean&#39;s blog</subtitle>
    <updated>2023-10-23T21:51:40&#43;08:00</updated>
    <id>https://gedoujiao.github.io/</id>
    <link rel="alternate" type="text/html" href="https://gedoujiao.github.io/" />
    <link rel="self" type="application/atom&#43;xml" href="https://gedoujiao.github.io/atom.xml" />
    <author>
            <name>个豆角</name>
            <uri>https://gedoujiao.github.io</uri>
            
                <email>2438863910@qq.com</email>
            </author>
    
    <generator uri="https://gohugo.io/" version="0.115.4">Hugo</generator>
        <entry>
            <title type="text">固件解包——binwalk的使用</title>
            <link rel="alternate" type="text/html" href="https://gedoujiao.github.io/blogs/%E5%9B%BA%E4%BB%B6%E8%A7%A3%E5%8C%85binwalk%E7%9A%84%E4%BD%BF%E7%94%A8/" />
            <id>https://gedoujiao.github.io/blogs/%E5%9B%BA%E4%BB%B6%E8%A7%A3%E5%8C%85binwalk%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
            <updated>2023-10-08T19:20:16&#43;08:00</updated>
            <published>2023-10-08T19:17:10&#43;08:00</published>
            <author>
                    <name>个豆角</name>
                    <uri>https://gedoujiao/github.io</uri>
                    <email>2438863910@qq.com</email>
                    </author>
            <summary type="html">固件解包——binwalk的使用 binwalk的介绍 binwalk是用于搜索给定二进……</summary>
            
                <content type="html">&lt;h1 id=&#34;固件解包binwalk的使用&#34;&gt;固件解包——binwalk的使用&lt;/h1&gt;
&lt;h2 id=&#34;binwalk的介绍&#34;&gt;binwalk的介绍&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;binwalk是用于搜索给定二进制镜像文件以获取嵌入的文件和代码的工具&lt;/li&gt;
&lt;li&gt;常用参数：
&lt;ul&gt;
&lt;li&gt;-M：根据magic签名扫描结果进行递归提取&lt;/li&gt;
&lt;li&gt;-e：使用默认的预定义配置文件extract.conf提取探测到的文件系统&lt;/li&gt;
&lt;li&gt;-d：限制递归提取的深度，默认为8&lt;/li&gt;
&lt;li&gt;-l：显示完整的扫描结果&lt;/li&gt;
&lt;li&gt;-A：确定CPU的架构&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;binwalk基本解包方法介绍&#34;&gt;binwalk基本解包方法介绍&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;../../images/%25E5%25BE%25AE%25E4%25BF%25A1%25E6%2588%25AA%25E5%259B%25BE_20231008174500.png&#34; alt=&#34;微信截图_20231008174500&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;-e-分解出压缩包可以将bin文件转化为文件&#34;&gt;-e 分解出压缩包，可以将bin文件转化为文件&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;binwalk -e pcat.bin //要分解的文件名
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;../../images/%25E5%25BE%25AE%25E4%25BF%25A1%25E6%2588%25AA%25E5%259B%25BE_20231008174735.png&#34; alt=&#34;微信截图_20231008174735&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;-d或者dd-分解某种类型的文件&#34;&gt;-D或者–dd 分解某种类型的文件&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;binwalk -D=jpeg/*文件类型*/  pcat.bin  //要分解的文件名
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;-m-递归分解扫描出来的文件&#34;&gt;-M 递归分解扫描出来的文件&lt;/h4&gt;
&lt;p&gt;（得跟-e或者-D配合使用）。除了会得到文件夹之外还能得到分析（？）的信息（看不懂）&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;binwalk -eM  pcat.bin //要分解的文件名
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;微信截图_20231008174944images25e525be25ae25e425bf25a125e6258825aa25e5259b25be_20231008174944png&#34;&gt;&lt;img src=&#34;../../images/%25E5%25BE%25AE%25E4%25BF%25A1%25E6%2588%25AA%25E5%259B%25BE_20231008174944.png&#34; alt=&#34;微信截图_20231008174944&#34;&gt;&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;binwalk pcat.bin
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../../images/%25E5%25BE%25AE%25E4%25BF%25A1%25E6%2588%25AA%25E5%259B%25BE_20231008175808.png&#34; alt=&#34;微信截图_20231008175808&#34;&gt;&lt;/p&gt;
&lt;p&gt;小端序，squashfs的文件系统&lt;/p&gt;
&lt;h4 id=&#34;设置过滤选项-x--y&#34;&gt;设置过滤选项-x -y&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;-x, --exclude=&amp;lt;str&amp;gt;          Exclude results that match &amp;lt;str&amp;gt;  排除与&amp;lt;str&amp;gt;匹配的结果
-y, --include=&amp;lt;str&amp;gt;          Only show results that match &amp;lt;str&amp;gt; 只显示与&amp;lt;str&amp;gt;匹配的结果
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;显示完整扫描结果-l&#34;&gt;显示完整扫描结果-l&lt;/h4&gt;
&lt;h4 id=&#34;查看熵值及有无加密-e&#34;&gt;查看熵值（及有无加密）-E&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;64
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;65
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;66
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;root@node1:/home/binwalk# binwalk -h
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Binwalk v2.2.1+e0f9bf7   &lt;span class=&#34;c1&#34;&gt;# 版本号&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Craig Heffner, ReFirmLabs
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;https://github.com/ReFirmLabs/binwalk
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Usage: binwalk &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;OPTIONS&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;FILE1&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;FILE2&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;FILE3&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; ...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Disassembly Scan Options:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -Y, --disasm                 Identify the CPU architecture of a file using the capstone disassembler
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -T, --minsn&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;int&amp;gt;            Minimum number of consecutive instructions to be considered valid &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default: 500&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -k, --continue               Don&lt;span class=&#34;s1&#34;&gt;&amp;#39;t stop at the first match
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;Signature Scan Options:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;    -B, --signature              Scan target file(s) for common file signatures 扫描目标文件以获取常见文件签名
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;    -R, --raw=&amp;lt;str&amp;gt;              Scan target file(s) for the specified sequence of bytes 扫描目标文件的指定字符序列
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;    -A, --opcodes                Scan target file(s) for common executable opcode signatures 扫描目标文件中常见可执行代码
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;    -m, --magic=&amp;lt;file&amp;gt;           Specify a custom magic file to use 指定要使用的自定义签名文件
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;    -b, --dumb                   Disable smart signature keywords  禁用智能签名关键字
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;    -I, --invalid                Show results marked as invalid 显示完整的扫描结果
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;    -x, --exclude=&amp;lt;str&amp;gt;          Exclude results that match &amp;lt;str&amp;gt;  排除与&amp;lt;str&amp;gt;匹配的结果
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;    -y, --include=&amp;lt;str&amp;gt;          Only show results that match &amp;lt;str&amp;gt; 只显示与&amp;lt;str&amp;gt;匹配的结果
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;Extraction Options:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;    -e, --extract                Automatically extract known file types  自动提取已知的文件类型
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;    -D, --dd=&amp;lt;type[:ext[:cmd]]&amp;gt;  Extract &amp;lt;type&amp;gt; signatures (regular expression), give the files an extension of &amp;lt;ext&amp;gt;, and execute &amp;lt;cmd&amp;gt; 提取&amp;lt;type&amp;gt;签名，为文件扩展名为&amp;lt;ext&amp;gt;，然后执行&amp;lt;cmd&amp;gt;，比如：binwalk -D &amp;#39;&lt;/span&gt;png image:png&lt;span class=&#34;s1&#34;&gt;&amp;#39; firmware.bin
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;    -M, --matryoshka             Recursively scan extracted files 递归扫描提取的文件
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;    -d, --depth=&amp;lt;int&amp;gt;            Limit matryoshka recursion depth (default: 8 levels deep) 递归深度
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;    -C, --directory=&amp;lt;str&amp;gt;        Extract files/folders to a custom directory (default: current working directory) 将文件/文件夹提取到自定义目录（默认：当前工作目录）
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;    -j, --size=&amp;lt;int&amp;gt;             Limit the size of each extracted file 限制每个提取文件的大小
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;    -n, --count=&amp;lt;int&amp;gt;            Limit the number of extracted files 限制提取文件的数量
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;    -r, --rm                     Delete carved files after extraction 清理零大小文件和提取工具在提取期间无法处理的文件。仅当与--extract或--dd一起使用时有效。有助于清除提取期间从目标文件中复制的误报文件
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;    -z, --carve                  Carve data from files, but don&amp;#39;&lt;/span&gt;t execute extraction utilities 从文件中读取数据，但不执行提取实用程序
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -V, --subdirs                Extract into sub-directories named by the offset
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Entropy Options:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -E, --entropy                Calculate file entropy 计算文件熵，熵分析可以帮助识别固件映像中有趣的数据部分
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -F, --fast                   Use faster, but less detailed, entropy analysis
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -J, --save                   Save plot as a PNG  自动将 --entropy 生成的熵图保存到 PNG 文件中，而不是显示它
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -Q, --nlegend                Omit the legend from the entropy plot graph 从熵图中省略图例
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -N, --nplot                  Do not generate an entropy plot graph  不生成熵图
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -H, --high&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;float&amp;gt;           Set the rising edge entropy trigger threshold &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default: 0.95&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;  设置上升沿熵触发阈值
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -L, --low&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;float&amp;gt;            Set the falling edge entropy trigger threshold &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default: 0.85&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;  设置下升沿熵触发阈值
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Binary Diffing Options:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -W, --hexdump                Perform a hexdump / diff of a file or files 比较文件
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -G, --green                  Only show lines containing bytes that are the same among all files
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -i, --red                    Only show lines containing bytes that are different among all files
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -U, --blue                   Only show lines containing bytes that are different among some files
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -u, --similar                Only display lines that are the same between all files
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -w, --terse                  Diff all files, but only display a hex dump of the first file
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Raw Compression Options:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -X, --deflate                Scan &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; raw deflate compression streams
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -Z, --lzma                   Scan &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; raw LZMA compression streams 通过暴力破解识别可能的原始 LZMA 压缩数据流
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -P, --partial                Perform a superficial, but faster, scan
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -S, --stop                   Stop after the first result
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;General Options:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -l, --length&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;int&amp;gt;           Number of bytes to scan
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -o, --offset&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;int&amp;gt;           Start scan at this file offset
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -O, --base&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;int&amp;gt;             Add a base address to all printed offsets
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -K, --block&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;int&amp;gt;            Set file block size
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -g, --swap&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;int&amp;gt;             Reverse every n bytes before scanning
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -f, --log&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;file&amp;gt;             Log results to file  将结果记录到文件
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -c, --csv                    Log results to file in CSV format
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -t, --term                   Format output to fit the terminal window
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -q, --quiet                  Suppress output to stdout  禁止输出到标准输出
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -v, --verbose                Enable verbose output  详细输出
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -h, --help                   Show &lt;span class=&#34;nb&#34;&gt;help&lt;/span&gt; output
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -a, --finclude&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;str&amp;gt;         Only scan files whose names match this regex
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -p, --fexclude&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;str&amp;gt;         Do not scan files whose names match this regex
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    -s, --status&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;int&amp;gt;           Enable the status server on the specified port 启用指定端口上的状态服务器
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
            
            
            
            
            
                
                    
                
                    
                
            
        </entry>
    
        <entry>
            <title type="text">固件安全实战1</title>
            <link rel="alternate" type="text/html" href="https://gedoujiao.github.io/blogs/%E5%9B%BA%E4%BB%B6%E5%AE%89%E5%85%A8%E5%AE%9E%E6%88%981/" />
            <id>https://gedoujiao.github.io/blogs/%E5%9B%BA%E4%BB%B6%E5%AE%89%E5%85%A8%E5%AE%9E%E6%88%981/</id>
            <updated>2023-10-08T10:37:30&#43;08:00</updated>
            <published>2023-10-07T16:50:40&#43;08:00</published>
            <author>
                    <name>个豆角</name>
                    <uri>https://gedoujiao/github.io</uri>
                    <email>2438863910@qq.com</email>
                    </author>
            <summary type="html">1.1固件安全实战 固件加载流程 什么是固件？ 固件(Firmware)就是写入EPROM……</summary>
            
                <content type="html">&lt;h1 id=&#34;11固件安全实战&#34;&gt;1.1固件安全实战&lt;/h1&gt;
&lt;h2 id=&#34;固件加载流程&#34;&gt;固件加载流程&lt;/h2&gt;
&lt;h3 id=&#34;什么是固件&#34;&gt;什么是固件？&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;固件(Firmware)就是写入EPROM（可擦写可编程只读存储器）或EEPROM(电可擦可编程只读存储器)中的程序。&lt;/p&gt;
&lt;p&gt;固件是指设备内部保存的设备“驱动程序”，通过固件，操作系统才能按照标准的设备驱动实现特定机器的运行动作，比如光驱、刻录机等都有内部固件。&lt;/p&gt;
&lt;p&gt;固件是担任着一个系统最基础最底层工作的软件。而在硬件设备中，固件就是硬件设备的灵魂，因为一些硬件设备除了固件以外没有其它软件组成，因此固件也就决定着硬件设备的功能及性能。&lt;/p&gt;
&lt;p&gt;——百度百科&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;固件是一种软件，可以和底层硬件交互。&lt;/p&gt;
&lt;h3 id=&#34;固件构成&#34;&gt;固件构成&lt;/h3&gt;
&lt;p&gt;嵌入式linux固件常见结构：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bootloader：如uboot.bin&lt;/li&gt;
&lt;li&gt;kernel：如ulmage&lt;/li&gt;
&lt;li&gt;filesystem：rootfs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;BootRom(固化在硬件中)调用Bootloader&lt;/p&gt;
&lt;p&gt;Bootloader调用Kernel（内核）&lt;/p&gt;
&lt;p&gt;Kernel去调用 filesystem（文件系统）&lt;/p&gt;
&lt;h3 id=&#34;常见的bootloader&#34;&gt;常见的Bootloader&lt;/h3&gt;
&lt;h2 id=&#34;文件系统及操作系统&#34;&gt;文件系统及操作系统&lt;/h2&gt;
&lt;h3 id=&#34;文件系统&#34;&gt;文件系统&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;../../images/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231004174242.png&#34; alt=&#34;微信截图_20231004174242&#34;&gt;&lt;/p&gt;
&lt;p&gt;说人话，就是文件目录。&lt;/p&gt;
&lt;h3 id=&#34;根文件系统&#34;&gt;根文件系统&lt;/h3&gt;
&lt;p&gt;首先根文件系统是内核启动时所mount的第一个文件系统，内核代码映像文件保存在根文件系统中，而系统引导启动程序会在根文件系统挂载之后从中把一些基本的初始化脚本和服务等加载到内存中去运行。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231004174628.png&#34; alt=&#34;微信截图_20231004174628&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;常见嵌入式文件系统&#34;&gt;常见嵌入式文件系统&lt;/h3&gt;
&lt;p&gt;使用df -ahT命令查看当前系统的所有文件系统&lt;/p&gt;
&lt;p&gt;-h显示大小&lt;/p&gt;
&lt;p&gt;-T显示文件系统类型&lt;/p&gt;
&lt;p&gt;-a打印所有文件系统&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;graph TD
a[常见嵌入式文件系统]--&amp;gt;b[基于存储设备的文件系统]
a--&amp;gt;c[基于逻辑的虚拟文件系统]
b--&amp;gt;b1[内存文件系统]
b1--&amp;gt;b11[tmpfs]
b1--&amp;gt;b12[ramdisk]
b--&amp;gt;b2[flash文件系统]
b2--&amp;gt;b21[cramfs]
b2--&amp;gt;b22[squashfs]
b2--&amp;gt;b23[jffs/jffs2]
b2--&amp;gt;b24[yaffs/yaffs2]
b2--&amp;gt;b25[ubifs]
b--&amp;gt;b3[扩展SD卡文件系统]
b3--&amp;gt;b31[FAT32]
b3--&amp;gt;b32[ext2/ext3]
b--&amp;gt;b4[网络文件系统]
b4--&amp;gt;b41[NFS]
b4--&amp;gt;b42[Samba]
c--&amp;gt;c1[进程文件系统]
c1--&amp;gt;procfs
c--&amp;gt;c2[设备文件系统]
c2--&amp;gt;devfs
c2--&amp;gt;sysfs
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;内存文件系统&lt;/strong&gt;包括tmpfs和ramdisk。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;tmpfs文件系统是一种&lt;strong&gt;临时的文件系统&lt;/strong&gt;，由linux内核来支持，只需要在内存中指定一个区域，指定最大的大小，就可以直接使用，不需要对内存进行格式化。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ramdisk是将一部分&lt;strong&gt;固定大小的内存（ RAM ）空间模拟出硬盘分区&lt;/strong&gt;，断电后会丢失。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;flash文件系统&lt;/strong&gt;包括cramfs和squashfs和jffs/jffs2和yaffs/yaffs2和ubifs。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;cramfs是&lt;strong&gt;只读压缩的文件系统&lt;/strong&gt;，可以将文件系统进行压缩，提高存储效率。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;squashfs是&lt;strong&gt;只读压缩的文件系统&lt;/strong&gt;，相比于cramfs可以支持&lt;strong&gt;更大&lt;/strong&gt;的单个文件大小。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;jffs/jffs2是&lt;strong&gt;可以读写&lt;/strong&gt;，&lt;strong&gt;压缩的日志闪存文件系统&lt;/strong&gt;，主要是应用于nor flash。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;yaffs/yaffs2是&lt;strong&gt;另一种日志闪存文件系统&lt;/strong&gt;，主要是为nand型flash设计的文件系统，为了应对flash容量的快速增长。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ubifs是作为jffs2的后继文件系统，满足&lt;strong&gt;大容量&lt;/strong&gt;的需求。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;扩展SD卡文件系统&lt;/strong&gt;包括FAT32和ext2/ext3。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;FAT32是微软专为&lt;strong&gt;windows&lt;/strong&gt;开发的文件系统，在windows上有很好的兼容性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ext2/ext3是&lt;strong&gt;Linux&lt;/strong&gt;上的日志文件系统，可靠性好，但在windows上支持不太好。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;网络文件系统&lt;/strong&gt;包括NFS和Samba。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;NFS是开发板与宿主机进行挂载的文件系统。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Samba是windows与Linux之间的共享机制。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;文件系统的基础结构&#34;&gt;文件系统的基础结构&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;../../images/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231004185036.png&#34; alt=&#34;微信截图_20231004185036&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;操作系统&#34;&gt;操作系统&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;按内核结构划分
&lt;ul&gt;
&lt;li&gt;微内核&lt;/li&gt;
&lt;li&gt;宏内核&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;按用途划分
&lt;ul&gt;
&lt;li&gt;通用操作系统（pc等）&lt;/li&gt;
&lt;li&gt;嵌入式操作系统（物联网设备）&lt;/li&gt;
&lt;li&gt;专用操作系统（军事、医疗）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;根据实时性来划分
&lt;ul&gt;
&lt;li&gt;实时操作系统（RTOS，Vxworks等）&lt;/li&gt;
&lt;li&gt;分时操作系统（Linux）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;常见漏洞及环境搭建&#34;&gt;常见漏洞及环境搭建&lt;/h2&gt;
&lt;h3 id=&#34;常见漏洞&#34;&gt;常见漏洞&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;信息泄露
&lt;ul&gt;
&lt;li&gt;漏洞描述：&lt;strong&gt;D-Link DIR850L 信息泄露漏洞&lt;/strong&gt;，&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;XSS&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;命令执行（授权、未授权）&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;漏洞描述：在cgibin程序的genacgi——main函数中，sprintf方法直接用/gena.cgi中的service参数。攻击者可以构造一个有效载荷来执行任意恶意代码。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;任意文件操作&lt;/li&gt;
&lt;li&gt;堆栈溢出&lt;/li&gt;
&lt;li&gt;拒绝服务
&lt;ul&gt;
&lt;li&gt;漏洞描述：Tenda AC9 openSchedWifi功能未对数据输入长度进行校验。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;硬编码漏洞
&lt;ul&gt;
&lt;li&gt;漏洞描述：D-Link DIR-620硬编码的默认凭证。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;未授权访问
&lt;ul&gt;
&lt;li&gt;漏洞描述：ZIO ROUTER路由器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DNS缓存中毒&lt;/li&gt;
&lt;li&gt;后门漏洞&lt;/li&gt;
&lt;li&gt;等等&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;环境搭建&#34;&gt;环境搭建&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;操作系统&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;windows7&lt;/li&gt;
&lt;li&gt;windows10&lt;/li&gt;
&lt;li&gt;Ubuntu14/16/20&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;固件解包工具&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;binwalk&lt;/strong&gt;：常用的固件提取工具&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/Aluxian_/article/details/132390574&#34;&gt;走这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Linux下载安装：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;clone&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;https&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;://&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;github&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;com&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ReFirmLabs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;binwalk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;git&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;binwalk&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;python&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;setup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;py&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;install&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;使用方法：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;dd：任何数据的任何位置（使用较为复杂），提取某处地址或偏移的文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;lzma，unzip等：压缩/解压工具&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;unsquashfs：文件系统提取工具&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fcrackzip：压缩包密码破解工具（在官网下载一些压缩包时往往被加密。使用暴力破解进行破解的工具）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;strings：提取以null结尾字符串的工具&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;hexdump，winhex：十六进制查看工具&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fdisk：磁盘操作工具（有些固件很大，虚拟机或者防火墙）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;逆向分析工具&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;IDA7.5&lt;/strong&gt;支持mips&lt;/li&gt;
&lt;li&gt;ghidra开源的，支持mips&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gdb/gdbserver&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;固件模拟&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;当我们不能去买一整套的设备&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;qemu&lt;/strong&gt;（系统模拟和用户模式）：固件模拟&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/M82_A1/article/details/91346784&#34;&gt;去这里&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;firmadyne：固件模拟框架（简化模拟过程）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;FirmAE：固件模拟框架&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自动分析框架&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;FACT_core&lt;/li&gt;
&lt;li&gt;firmwalker（获取敏感信息）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
            
            
            
            
            
                
                    
                
                    
                
            
        </entry>
    
        <entry>
            <title type="text">Docker</title>
            <link rel="alternate" type="text/html" href="https://gedoujiao.github.io/blogs/docker/" />
            <id>https://gedoujiao.github.io/blogs/docker/</id>
            <updated>2023-07-31T23:45:39&#43;08:00</updated>
            <published>2023-07-26T19:22:56&#43;08:00</published>
            <author>
                    <name>个豆角</name>
                    <uri>https://gedoujiao/github.io</uri>
                    <email>2438863910@qq.com</email>
                    </author>
            <summary type="html">Docker 与运维部署有关的技术 初识Docker 写好的代码要接触三个环境： 开发环境 测试环境 生产……</summary>
            
                <content type="html">&lt;h1 id=&#34;docker&#34;&gt;Docker&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;与运维部署有关的技术&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;初识docker&#34;&gt;初识Docker&lt;/h2&gt;
&lt;p&gt;写好的代码要接触三个环境：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开发环境&lt;/li&gt;
&lt;li&gt;测试环境&lt;/li&gt;
&lt;li&gt;生产环境&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由于代码在不同的环境下运行，就会出问题。（原因：水土不服）&lt;/p&gt;
&lt;p&gt;解决方法：把&lt;strong&gt;环境和代码&lt;/strong&gt;一起发给别人。&lt;/p&gt;
&lt;p&gt;容器：&lt;strong&gt;环境加代码&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Docker：是一个开源的应用容器引擎。可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的Linux机器上。&lt;/p&gt;
&lt;h3 id=&#34;安装docker&#34;&gt;安装Docker&lt;/h3&gt;
&lt;p&gt;参考https://docker.easydoc.net/&lt;/p&gt;
&lt;h3 id=&#34;docker架构&#34;&gt;Docker架构&lt;/h3&gt;
&lt;p&gt;Docker 包括三个基本概念:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;镜像（Image）&lt;/strong&gt;：Docker 镜像（Image），就相当于是一个 root 文件系统。比如官方镜像 ubuntu:16.04 就包含了完整的一套 Ubuntu16.04 最小系统的 root 文件系统。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;容器（Container）&lt;/strong&gt;：镜像（Image）和容器（Container）的关系，就像是面向对象程序设计中的类和实例一样，镜像是静态的定义，容器是镜像运行时的实体。容器可以被创建、启动、停止、删除、暂停等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;仓库（Repository）&lt;/strong&gt;：仓库可看成一个代码控制中心，用来保存镜像。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Docker 使用客户端-服务器 (C/S) 架构模式，使用远程API来管理和创建Docker容器。&lt;/p&gt;
&lt;p&gt;Docker 容器通过 Docker 镜像来创建。&lt;/p&gt;
&lt;p&gt;容器与镜像的关系类似于面向对象编程中的对象与类。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../../../576507-docker1.png&#34; alt=&#34;576507-docker1&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;docker的命令&#34;&gt;Docker的命令&lt;/h2&gt;
&lt;h3 id=&#34;docker容器的使用&#34;&gt;Docker容器的使用&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.runoob.com/docker/docker-container-usage.html&#34;&gt;Docker 容器使用 | 菜鸟教程 (runoob.com)&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//查看所有命令选项
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker stats --help
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//docker &lt;span class=&#34;nb&#34;&gt;command&lt;/span&gt; --help 更深入地了解指定地命令使用方法
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//获取镜像,如果本地没有ubuntu镜像，则可以这样载入
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker pull ubuntu
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//或者
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker pull ubuntu:latest
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;利用docker出pwn题&#34;&gt;利用Docker出pwn题&lt;/h2&gt;
&lt;h3 id=&#34;在ubuntu配置docker的环境&#34;&gt;在ubuntu配置docker的环境&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-get update
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-get install docker.io
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//检查docker是否安装成功
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker version
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//查看帮助
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker --help
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;command&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; --help
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//以下命令如果不加sudo会报错
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo docker info
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo docker images
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//容器构建
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo build
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//运行容器
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo docker run
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//停止容器
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo docker stop
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//强制停止容器
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo docker &lt;span class=&#34;nb&#34;&gt;kill&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//删除容器
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo docker rm
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; sudo apt install docker-compose
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//docker-compose是用于定义和运行多容器Docker应用程序的工具。通过docker-compose，可以使用yml文件来配置应用程序的所需文件。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;ctf_xinetd与pwn_deploy_chroot项目&#34;&gt;ctf_xinetd与pwn_deploy_chroot项目&lt;/h3&gt;
&lt;h4 id=&#34;ctf_xinetd项目&#34;&gt;ctf_xinetd项目&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git clone https://github.com/Eadom/ctf_xinetd
&lt;/code&gt;&lt;/pre&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;把题目可执行文件和flag放在ctf_xinetd/bin中
ps：不要把 bin 作为题目的名字&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改ctf.xinetd文件
回到ctf_xinetd目录下，修改ctf.xinetd
把图片箭头指向的 helloworld 改成bin文件夹中题目的名字
保存退出&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Build
在ctf_xinetd目录下 .&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo docker build -t &lt;span class=&#34;s2&#34;&gt;&amp;#34;pwn&amp;#34;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run
在ctf_xinetd目录下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo docker run -d -p &lt;span class=&#34;s2&#34;&gt;&amp;#34;0.0.0.0:pub_port:9999&amp;#34;&lt;/span&gt; -h &lt;span class=&#34;s2&#34;&gt;&amp;#34;pwn&amp;#34;&lt;/span&gt; --name&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;pwn&amp;#34;&lt;/span&gt; pwn
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;-h：指定容器的hostname
pub_port：改成你想放置的端口号，建议如8001，8002…等&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;此时输入docker ps 会发现题目容器已经启动了，可以nc 0.0.0.0 pub_port进行测试一下（pub_port：改成你想放置的端口号）&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/YangZiTrick/article/details/109474241&#34;&gt;参考&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.runoob.com/docker/ubuntu-docker-install.html&#34;&gt;docker | 菜鸟教程&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;pwn_deploy_chroot项目&#34;&gt;pwn_deploy_chroot项目：&lt;/h4&gt;
&lt;p&gt;当需要部署多道题时，可以采用该项目，一次部署！&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 将该项目克隆下来&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/giantbranch/pwn_deploy_chroot
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 使用&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;步一：将所有pwn题目放入bin目录（注意名字不带特殊字符，因为会将文件名作为linux用户名）
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;步二：python initialize.py
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;该python指python2，该步是设置各种文件
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;步三：docker-compose up --build -d
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;根据Dockerfile文件及其配置文件创建容器并开启
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;pwn出题&#34;&gt;pwn出题&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# NX保护机制：&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-z execstack / -z noexecstack  &lt;span class=&#34;c1&#34;&gt;# (关闭 / 开启) 堆栈不可执行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Canary：(关闭 / 开启 / 全开启) 栈里插入cookie信息&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# !开canary好像会造成栈中局部变量的顺序有所改变&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-fno-stack-protector /-fstack-protector / -fstack-protector-all 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# ASLR和PIE：&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-no-pie / -pie   &lt;span class=&#34;c1&#34;&gt;# (关闭 / 开启) 地址随机化，另外打开后会有get_pc_thunk&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# RELRO：&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-z norelro / -z lazy / -z now   &lt;span class=&#34;c1&#34;&gt;# (关闭 / 部分开启 / 完全开启) 对GOT表具有写权限&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-s   &lt;span class=&#34;c1&#34;&gt;# 去除符号表&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/Huangjiazhen711/article/details/126815505&#34;&gt;参考&lt;/a&gt;&lt;/p&gt;
</content>
            
            
            
            
            
                
                    
                
                    
                
            
        </entry>
    
</feed>
